child element 的内容大于parent的size叫overflow。
overflow: hidden; overflow 超出parent的部分就直接砍掉
          auto; 加个scroll bar
text-overflow: ellipsis; 加"..."       overflow的文字该怎么处理
              text-overflow 能工作的前提是必须有这些：
            ｛
              white-space: nowrap;
              overflow: hidden;
            ｝

position: relative; top bottom left right都是指距离top left等的距离，确定他和他应该在的位置的相对位置。
          absolute; top bottom left right确定和他nearest ancestor的位置      /*element就会被从document中提出来，其余element就会占用空出来的空间？*/
          static; 不受top bottom left right的影响
          fixed;  top bottom left right 固定这个element在页面上的位置， 怎么scroll都不动

border-radis: 35px;
              50%; 控制element的角变圆

z-index: 10;   z demision上，决定屏幕中谁在谁上面。大的在上面

display: inline;        element in same line，像一行里的文字一样，能塞就塞。
         block;         block level, take up a whole line, Box Model applies.
         inline-block;  make block level element inline; still inline, but can somehow apply box model property.
         none;          整个element就消失了，structure里没有了，但是dom里能显示。

visibility: hidden;     只是让element看不见，但是structure还在，就是页面不显示，但是那东西还在那能感觉到。

MEDIA QUERIES
@media all and (mid-width: 300px) {

}                                       表示询问media是不是满足屏幕大小最小大于300px，是的话就apply｛ ｝里的style。

white-space: nowrap;        如何处理element里的连续空格。



font-family: Georgia, "Times New Roman", serif;         这叫font stack (local)

Pseudo-Elements is used to style specified parts of an element.  pseudo element一共就这5个
  p::first-line {

  }
  ::first-letter
  ::before ｛
    content；‘要加的东西’
  ｝            used to insert some content before the content of an element
  ::after       insert content after the content of an element
  ::section     matches the style to the part that user用鼠标拉上选中的

@font-face {                            web-font先声明 然后和local一样用
  font-family:
  src
  font-weight:normal;
  font-style: ;
}

font-size: 16px;
           24px;            //absolute size

           xx-small; x-small; small; medium; x-large; x-large; xx-large; 依靠client agent 可能不同browser 不同。

           1.8em;     browser default;
           1em;       如果parent element 有font－size， 以parent element size 为基准，不以browser default 为基准
                      一般browser default 是16px；
           120%       relative，与上面一样，字间关系保留，手机 平板 pc上关系不用变


font-style: italic;
            inherit;           Go to parent element, find font-style, inherit it.
            normal;           don't use italic;
            oblique;          Use oblique version of the font;

font-weight: 100; ----- 900;
             inherit;
             bold;  bolder;
             lighter;
             normal;

text-transform: capitalize;
                lowercase;
                inherit;
                none;               undo anything transform done before;
                uppercase;

font-variant: small-caps;         都是大写，但是每个词开头的第一个字母字号大，后面的小。
              normal;
              interit;

text-decoration: none;
                 underline;       加下划线
                 overline；       上划线
                 line－through；   删除线
                 blink；           闪闪的。

text-align: left;                   这是水平align
            right;
            center;
            justify;


-moz-hyphens: auto
-webkit-
-o-
-ms-                //  IE
                          vendor prefix


letter-spacing: -5px;
                15px;       字母间间隔调整；

word-spacing: 15px;
              1.5em;
              150%;
              .2em;

text-indent: 1em;
             -.5em;
             -2000em;         用于hide文字

line-height: normal;      1 - 1.2em   size of font
             140%;        text 的1.4倍是行高
             1.4em；       对em，这个line－height会fixed传给children，children都是1.4em，不管children的line－height设多少。
             1.4;         1.4倍，和上面一样，这个可以给children inherit再乘倍数
             50px；       这样设line－height，如果没有box height 那line－height成element height，文字在element上下正中。


Horizontal margins accumulative
Vertical margins collapse                   Floated elements removed from normal document flow

margin-top      margin-bottom     两个相遇，大的apply，小的丢了
如果没border， padding， parent, children 的margin 都 collapse
有padding， border； margin 就都不collapse 因为他们 keep margins from touching
margin-right: auto;         Give it what's left over.

min-width: 150px;       Set minimus width of element
           70%;         No smaller, if min-width > width or max-width, min-width rules;






FlexBox:
http://flexbox.io/view/ND8SjPJOk_M

.contianer{
  display: flex;    子元素就自动都成flex了
  hieght: 100vh       viewport hieght     这个相当于100%，就是现在打开页面的100%大小 和flexbox没关
  flex-direction: row;        这是default           main aix 从左往右 cross axis 从上到下
                  row-reverse;      从右向左
                  column;           main axis 从上到下 cross axis 从左到右
                  column-reverse;     main aixs从下到上

  flex-wrap: nowrap;这个是default        给flex container 里的flex element 赋值宽度时，如果宽度大于window 宽度，flex element 就直接在window宽度停住了，不再变宽，并且自动evenly dsitribute width。
             wrap;        这个就是每个element比如300px，那就有多宽就放多少，剩下的放下一层
             wrap-reverse;          change,reverse cross axis
  justify-content: flex-start;        default 从flex container的开始开始放         /*main axis*/
                   flex-end;          从flex container end开始往前摆element，靠近end；
                   center;
                   space-between;     分散开，从头平均分散到尾。
                   space-around;      跟上面一样，就是头和尾之外离container 还有一定的空格空间

  align-items: center;            /*cross axis*/
               stretch;           拉长element占满container   这个是好多的default的
               flex-start;
               flex-end;
               baseline;        看element中的text，把text的底基准一样。
  align-content: space-between;         和justify-content的property 一样    /*corss aixs*/
}


width: calc(33.333333% - 20px);       calc是CSS3里新的，就是每个box model元素是三分之一的地方剪去20px，20px可能是margin，margin不算box model 的内容。

  /*flex item*/
.box{
  flex: 1;        flex property：flex element里这样就是把所有element evenly distribute
        2;        1,2的区别就是如果items都是1的话，container就会把他自己的空间一一平均分给各个item，而如果有一个是2的话，2分配的空间就是别人的2倍，3就是3倍
  flex-basis: ; flex-grow: ; flex-shrink:
  /*move DOM element without really move DOM element*/
  order:3;        reorder,默认的都是0。设成3就是放到所有0，1，2的element之后，4的之前，小的放前面，大的后面。
  align-self: flex-end;         也是align，但是只是align自己这个element 会overrideflex container 之前定好的align property
}

JavaScript里减号➖是留给做减法用的，但是CSS里有很多如font-size, flex-start这种hyphenated的property，
如果用JavaScript引用他们的话，就用驼峰命名引用：
document.getElementById('dd').style.fontSize = '24px';

.innerHTML          是找html tag里的文字内容。


Attribute Selector:
[type='submit'] {width: 100px}        就是找所有有attribute type='submit'的并且设定宽度。
form imput[type='submit'] {width: 100px}        就是找only form input element有type='submit'的
[class='className']           和 .className效果一样
[id='idName']           与 ＃idName效果一样。


#boxout * p {border:1px solid green; }      这样可以找id下所有element再下的p tag就是paragraph不能是#boxout的direct child

#box .className {border:1px}
.className #box {border:1px}                  这两种都是110的specificity,跟顺序没有关系



div如果没指定的话，他会一直延展到browser windows的宽度，
span只会宽到和它里面的text相适应宽度。



Points：
.classname { font-size:14pt; }      A point is equivalent in size to 1/72 of an inch.

Inch:
.classname { width:3in; }         An inch is the equivalent of 72 points

Centimeters:
.classname { height:2cm; }      One centimeter is a little over 28 points

Millimeters:
.classname { font-size:5mm; }

Picas:
.classname { font-size:1pc; } A pica is another print typographic measurement, which is equivalent to 12 points.



color是forehead的color，
background-color(或者是直接background)是背景的颜色

background: linear-gradient(#90, red, blue);            可以让背景颜色在不同颜色中渐变 这是vertical的
            linear-gradient(90deg, #90, red, blue);       这样事水平的

background: radial-gradient(#90, red, blue);         椭圆形放射的变颜色
            radial-gradient(circle, #90, red, blue);          变成圆形
            radial-gradient(80%, 20%, #90, red, blue);        调整宽高
